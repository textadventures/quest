@using QuestViva.Common

<style scoped>
    dialog {
        border: none;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
        width: 100%;
        height: 100%;
        font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
        font-size: 1rem;
    }

    dialog::backdrop {
        background: rgba(0, 0, 0, 0.5);
    }

    .debugger-container {
        display: flex;
        flex-direction: column;
        height: 100%;
    }
    
    .debugger-main {
        flex: 1;
        display: flex;
        overflow: hidden;
    }
    
    .close-button {
        align-self: flex-end;
        margin: 10px;
        padding: 6px 12px;
        cursor: pointer;
    }
</style>

<dialog id="questVivaDebugger">
    <div class="debugger-container">
        <ul class="nav nav-tabs">
            @TabItem("Walkthrough")
            @foreach (var tab in Game.DebuggerObjectTypes)
            {
                @TabItem(tab)
            }
        </ul>
        <div class="debugger-main">
            @if (activeTab == "Walkthrough")
            {
                <Walkthrough Game="Game" OnRunWalkthrough="RunWalkthrough"></Walkthrough>
            }
            else if (activeTab != "")
            {
                <Attributes Game="Game" ActiveTab="@activeTab"></Attributes>
            }
        </div>
        <button @onclick="CloseDialog" class="close-button btn btn-primary">Close</button>
    </div>
</dialog>

@code {
    [Parameter] public required IGameDebug Game { get; set; }
    [Parameter] public EventCallback<string> OnRunWalkthrough { get; set; }
    [Inject] private IJSRuntime JS { get; set; } = null!;
    private string activeTab = "Walkthrough";

    private RenderFragment TabItem(string tab) =>
        @<li class="nav-item">
            <button class="nav-link @(activeTab == tab ? "active" : "")"
                    @onclick="() => activeTab = tab">
                @tab
            </button>
        </li>;

    private async Task RunWalkthrough(string name)
    {
        await CloseDialog();
        await OnRunWalkthrough.InvokeAsync(name);
    }
    
    private async Task CloseDialog()
    {
        await JS.InvokeVoidAsync("WebPlayer.closeDebugger");
    }
}