@using QuestViva.Common
@using QuestViva.PlayerCore
@using QuestViva.WebPlayer.Components.Debugger
@rendermode InteractiveServer
@inject GameLauncher GameLauncher

@if (gameDebug != null)
{
    <Debugger Game="@gameDebug" OnRunWalkthrough="RunWalkthrough"></Debugger>
}

@code {
    [Parameter] public required IGameDataProvider GameDataProvider { get; set; }
    [Inject] private IJSRuntime JS { get; set; } = null!;
    private QuestViva.PlayerCore.Player Player { get; set; } = null!;
    private IGameDebug? gameDebug;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;
        
        var gameData = await GameDataProvider.GetData();
        var game = GameLauncher.GetGame(gameData);
        
        Player = new QuestViva.PlayerCore.Player(game, GameDataProvider.ResourcesId, JS);
        GameResources.AddResourceProvider(GameDataProvider.ResourcesId, Player.GetResource);
        
        await JS.InvokeVoidAsync("WebPlayer.initUI");

        await Player.Initialise();
        
        gameDebug = game as IGameDebug;
        await JS.InvokeVoidAsync("WebPlayer.setCanDebug", gameDebug != null);
        StateHasChanged();
    }

    private async Task RunWalkthrough(string name)
    {
        await Player.RunWalkthrough(name);
    }
}