<library>
  <editor>
    <appliesto>@failed</appliesto>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsFailedtoload]</caption>
    </control>
    
    <control>
      <controltype>textbox</controltype>
      <attribute>0</attribute>
      <colour>Red</colour>
      <multiline/>
      <expand/>
      <breakbefore/>
    </control>
  </editor>
  
  <editor>
    <appliesto>//</appliesto>
    <category>[EditorScriptsScriptsScripts]</category>
    <add>[EditorScriptsScriptsComment]</add>
    <create>// Type comment</create>
    <advanced/>

    <control>
      <controltype>textbox</controltype>
      <attribute>0</attribute>
      <colour>Green</colour>
      <multiline/>
      <expand/>
    </control>

  </editor>
  
  <editor>
    <appliesto>if</appliesto>
    <category>[EditorScriptsScriptsScripts]</category>
    <add>[EditorScriptsScriptsIf]</add>
    <create>if ()</create>
    <common>[EditorScriptObjectsIf]</common>
    <!-- note: "if" has its own special editor, so it doesn't have any editor definition in this file -->
  </editor>

  <editor>
    <appliesto>firsttime</appliesto>
    <display>The first time, run: #0 - otherwise run: #1</display>
    <category>[EditorScriptsScriptsScripts]</category>
    <add>[EditorScriptsScriptsFirsttime]</add>
    <create>firsttime</create>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsThefirsttime]</caption>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>0</attribute>
      <caption>[EditorScriptsScriptsRunscript]</caption>
    </control>
    
    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsOtherwise]</caption>
      <breakbefore/>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>1</attribute>
      <caption>[EditorScriptsScriptsRunscript]</caption>
    </control>    
  </editor>

  <editor>
    <appliesto>for</appliesto>
    <display>For #0 values #1 to #2, run: #4</display>
    <category>[EditorScriptsScriptsScripts]</category>
    <add>[EditorScriptsScriptsFor]</add>
    <create>for (,,,1)</create>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsForloopvariable]</caption>
    </control>

    <control>
      <controltype>textbox</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsfrom]</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>number</simple>
      <simpleeditor>number</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsto]</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>2</attribute>
      <simple>number</simple>
      <simpleeditor>number</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsinstepsof]</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>3</attribute>
      <simple>number</simple>
      <simpleeditor>number</simpleeditor>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>4</attribute>
      <caption>[EditorScriptsScriptsRunscript]</caption>
      <breakbefore/>
    </control>
  </editor>

  <editor>
    <appliesto>foreach</appliesto>
    <display>For each #0 in #1, run: #2</display>
    <category>[EditorScriptsScriptsScripts]</category>
    <add>[EditorScriptsScriptsForeach]</add>
    <create>foreach (,)</create>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsForeachloop]</caption>
    </control>

    <control>
      <controltype>textbox</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsinsource]</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <usetemplates>foreach</usetemplates>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>2</attribute>
      <caption>[EditorScriptsScriptsRunscript]</caption>
      <breakbefore/>
    </control>
  </editor>

  <editor>
    <appliesto>switch</appliesto>
    <display>Switch #0: (#1 cases), Default: #2</display>
    <category>[EditorScriptsScriptsScripts]</category>
    <add>[EditorScriptsScriptsSwitch]</add>
    <create>switch ()</create>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsSwitch2]</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsCases]</caption>
      <breakbefore/>
    </control>

    <!-- TO DO: Popup needs to have ExpressionControl in it -->

    <control>
      <controltype>scriptdictionary</controltype>
      <caption>[EditorScriptsScriptsCases2]</caption>
      <attribute>1</attribute>
      <keyprompt>[EditorScriptsScriptsPleaseenter]</keyprompt>
    </control>

    <control>
      <breakbefore/>
      <controltype>script</controltype>
      <caption>[EditorScriptsScriptsDefault]</caption>
      <attribute>2</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>while</appliesto>
    <display>While #0 is true, run: #1</display>
    <category>[EditorScriptsScriptsScripts]</category>
    <add>[EditorScriptsScriptsWhile]</add>
    <create>while ()</create>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsWhile2]</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsistrue]</caption>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>1</attribute>
      <caption>[EditorScriptsScriptsRunscript]</caption>
      <breakbefore/>
    </control>
  </editor>

  <editor>
    <appliesto>()</appliesto>
    <display>Call function #0 (#1 parameters)</display>
    <category>[EditorScriptsScriptsScripts]</category>
    <add>[EditorScriptsScriptsCallfunction]</add>
    <create type="string"></create>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsCallfunction]</caption>
    </control>

    <control>
      <controltype>textbox</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsWithparameters]</caption>
    </control>

    <!-- TO DO: Popup needs to have ExpressionControl in it -->

    <control>
      <controltype>list</controltype>
      <caption>[EditorScriptsScriptsParameters]</caption>
      <attribute>1</attribute>
      <editprompt>[EditorScriptsScriptsPleaseenter2]</editprompt>
    </control>
  </editor>

  <editor>
    <appliesto>do</appliesto>
    <!-- TO DO: Don't display parameter #2 if it's null or empty -->
    <display>Run #0's '#1' script with parameters from dictionary #2</display>
    <category>[EditorScriptsScriptsScripts]</category>
    <add>[EditorScriptsScriptsRunanobjects]</add>
    <create>do (,"")</create>
    <advanced/>
    <onlydisplayif>GetString(game, "_editorstyle") = null</onlydisplayif>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsRunobject]</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>name</simple>
      <simpleeditor>objects</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsscriptattribute]</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>name</simple>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsUsingparameter]</caption>
      <breakbefore/>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>2</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>invoke</appliesto>
    <!-- TO DO: Don't display parameter #1 if it's null or empty -->
    <display>Run '#0' script with parameters from dictionary #1</display>
    <category>[EditorScriptsScriptsScripts]</category>
    <add>[EditorScriptsScriptsRunascript]</add>
    <create>invoke ()</create>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsInvokescript]</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsUsingparameter]</caption>
      <breakbefore/>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>error</appliesto>
    <display>Raise error #0</display>
    <category>[EditorScriptsScriptsScripts]</category>
    <create>error ("")</create>
    <add>[EditorScriptsScriptsRaiseanerror]</add>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsRaiseerror]</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>text</simple>
    </control>
  </editor>

  <editor>
    <appliesto>return</appliesto>
    <display>Return #0</display>
    <category>[EditorScriptsScriptsScripts]</category>
    <create>return ()</create>
    <add>[EditorScriptsScriptsSetthisfunctions]</add>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsSetthisfunctionsTo]</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
    </control>
  </editor>

  <editor>
    <appliesto>rundelegate</appliesto>
    <display>Run #0's #1 delegate implementation (#2 parameters)</display>
    <advanced/>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsRundelegate]</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>name</simple>
      <simpleeditor>objects</simpleeditor>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsAttribute]</caption>
      <breakbefore/>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>name</simple>
    </control>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsWithparameters]</caption>
      <breakbefore/>
    </control>

    <!-- TO DO: Popup needs to have ExpressionControl in it -->

    <control>
      <controltype>list</controltype>
      <caption>[EditorScriptsScriptsParameters]</caption>
      <attribute>2</attribute>
      <editprompt>[EditorScriptsScriptsPleaseenter2]</editprompt>
    </control>
  </editor>

  <editor>
    <appliesto>on ready</appliesto>
    <display>When ready, run: #0</display>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsWhenready]</caption>
    </control>

    <control>
      <controltype>script</controltype>
      <attribute>0</attribute>
      <caption>[EditorScriptsScriptsRunscript]</caption>
    </control>
  </editor>
</library>
